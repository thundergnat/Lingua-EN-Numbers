use v6;
use Test;
use Lingua::EN::Numbers;

plan *;

is(super('+-0123456789()ei'), '⁺⁻⁰¹²³⁴⁵⁶⁷⁸⁹⁽⁾ᵉⁱ', 'test all glyphs');
is(super(0), '⁰', 'numeric individual test n⁰');
is(super(1), '¹', 'numeric individual test n¹');
is(super(2), '²', 'numeric individual test n²');
is(super(3), '³', 'numeric individual test n³');
is(super(4), '⁴', 'numeric individual test n⁴');
is(super(5), '⁵', 'numeric individual test n⁵');
is(super(6), '⁶', 'numeric individual test n⁶');
is(super(7), '⁷', 'numeric individual test n⁷');
is(super(8), '⁸', 'numeric individual test n⁸');
is(super(9), '⁹', 'numeric individual test n⁹');
is(super(-0), '⁰', 'numeric individual negative test n⁰');
is(super(-1), '⁻¹', 'numeric individual negative test n⁻¹');
is(super(-2), '⁻²', 'numeric individual negative test n⁻²');
is(super(-3), '⁻³', 'numeric individual negative test n⁻³');
is(super(-4), '⁻⁴', 'numeric individual negative test n⁻⁴');
is(super(-5), '⁻⁵', 'numeric individual negative test n⁻⁵');
is(super(-6), '⁻⁶', 'numeric individual negative test n⁻⁶');
is(super(-7), '⁻⁷', 'numeric individual negative test n⁻⁷');
is(super(-8), '⁻⁸', 'numeric individual negative test n⁻⁸');
is(super(-9), '⁻⁹', 'numeric individual negative test n⁻⁹');
is(super(25), '²⁵', 'numeric multidigit test n²⁵');
is(super(46), '⁴⁶', 'numeric multidigit test n⁴⁶');
is(super(256), '²⁵⁶', 'numeric multidigit test n²⁵⁶');
is(super(234567), '²³⁴⁵⁶⁷', 'numeric multidigit test n²³⁴⁵⁶⁷');
is(super(-25), '⁻²⁵', 'numeric multidigit negative test n⁻²⁵');
is(super(-46), '⁻⁴⁶', 'numeric multidigit negative test n⁻⁴⁶');
is(super(-256), '⁻²⁵⁶', 'numeric multidigit negative test n⁻²⁵⁶');
is(super(-234567), '⁻²³⁴⁵⁶⁷', 'numeric multidigit negative test n⁻²³⁴⁵⁶⁷');
is(super("0"), '⁰', 'string individual test n⁰');
is(super("1"), '¹', 'string individual test n¹');
is(super("2"), '²', 'string individual test n²');
is(super("3"), '³', 'string individual test n³');
is(super("4"), '⁴', 'string individual test n⁴');
is(super("5"), '⁵', 'string individual test n⁵');
is(super("6"), '⁶', 'string individual test n⁶');
is(super("7"), '⁷', 'string individual test n⁷');
is(super("8"), '⁸', 'string individual test n⁸');
is(super("9"), '⁹', 'string individual test n⁹');
is(super("-0"), '⁻⁰', 'string individual negative test n⁰');
is(super("-1"), '⁻¹', 'string individual negative test n⁻¹');
is(super("-2"), '⁻²', 'string individual negative test n⁻²');
is(super("-3"), '⁻³', 'string individual negative test n⁻³');
is(super("-4"), '⁻⁴', 'string individual negative test n⁻⁴');
is(super("-5"), '⁻⁵', 'string individual negative test n⁻⁵');
is(super("-6"), '⁻⁶', 'string individual negative test n⁻⁶');
is(super("-7"), '⁻⁷', 'string individual negative test n⁻⁷');
is(super("-8"), '⁻⁸', 'string individual negative test n⁻⁸');
is(super("-9"), '⁻⁹', 'string individual negative test n⁻⁹');
is(super("25"), '²⁵', 'string multidigit test n²⁵');
is(super("46"), '⁴⁶', 'string multidigit test n⁴⁶');
is(super("256"), '²⁵⁶', 'string multidigit test n²⁵⁶');
is(super("234567"), '²³⁴⁵⁶⁷', 'string multidigit test n²³⁴⁵⁶⁷');
is(super("-25"), '⁻²⁵', 'string multidigit negative test n⁻²⁵');
is(super("-46"), '⁻⁴⁶', 'string multidigit negative test n⁻⁴⁶');
is(super("-256"), '⁻²⁵⁶', 'string multidigit negative test n⁻²⁵⁶');
is(super("-234567"), '⁻²³⁴⁵⁶⁷', 'string multidigit negative test n⁻²³⁴⁵⁶⁷');
is(super(0), '⁰', 'intstring individual test n⁰');
is(super(1), '¹', 'intstring individual test n¹');
is(super(2), '²', 'intstring individual test n²');
is(super(3), '³', 'intstring individual test n³');
is(super(4), '⁴', 'intstring individual test n⁴');
is(super(5), '⁵', 'intstring individual test n⁵');
is(super(6), '⁶', 'intstring individual test n⁶');
is(super(7), '⁷', 'intstring individual test n⁷');
is(super(8), '⁸', 'intstring individual test n⁸');
is(super(9), '⁹', 'intstring individual test n⁹');
is(super(-0), '⁰', 'intstring individual negative test n⁰');
is(super(-1), '⁻¹', 'intstring individual negative test n⁻¹');
is(super(-2), '⁻²', 'intstring individual negative test n⁻²');
is(super(-3), '⁻³', 'intstring individual negative test n⁻³');
is(super(-4), '⁻⁴', 'intstring individual negative test n⁻⁴');
is(super(-5), '⁻⁵', 'intstring individual negative test n⁻⁵');
is(super(-6), '⁻⁶', 'intstring individual negative test n⁻⁶');
is(super(-7), '⁻⁷', 'intstring individual negative test n⁻⁷');
is(super(-8), '⁻⁸', 'intstring individual negative test n⁻⁸');
is(super(-9), '⁻⁹', 'intstring individual negative test n⁻⁹');
is(super(25), '²⁵', 'intstring multidigit test n²⁵');
is(super(46), '⁴⁶', 'intstring multidigit test n⁴⁶');
is(super(256), '²⁵⁶', 'intstring multidigit test n²⁵⁶');
is(super(234567), '²³⁴⁵⁶⁷', 'intstring multidigit test n²³⁴⁵⁶⁷');
is(super(-25), '⁻²⁵', 'intstring multidigit negative test n⁻²⁵');
is(super(-46), '⁻⁴⁶', 'intstring multidigit negative test n⁻⁴⁶');
is(super(-256), '⁻²⁵⁶', 'intstring multidigit negative test n⁻²⁵⁶');
is(super(-234567), '⁻²³⁴⁵⁶⁷', 'intstring multidigit negative test n⁻²³⁴⁵⁶⁷');


done-testing();
